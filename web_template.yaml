AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Ecommerce Checkout Frontend AWS Resources.

Parameters: 
  Environment:
    Type: String
    Default: dev
  WebBucketName:
    Type: String
    Default: cup-ecommerce-dev-stack-ui


Resources:

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Permissions for CloudFront to access S3

  CloudfrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: Cloudfront distribution for serverless CUP Ecommerce website
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        # List of origins that Cloudfront will connect to
        Origins:
          - Id: s3-website
            DomainName: !GetAtt S3Bucket.DomainName
            S3OriginConfig:
              # Restricting Bucket access through an origin access identity
              OriginAccessIdentity:
                Fn::Sub: 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        # To add error template for 403
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
        # To connect the CDN to the origins you need to specify behaviors
        DefaultCacheBehavior:
          # Compress resources automatically ( gzip )
          Compress: 'true'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-website
          ViewerProtocolPolicy : redirect-to-https

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      # Change bucket name to reflect your website
      BucketName: !Ref WebBucketName

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
      # Restricting access to cloudfront only.
        Statement:
          -
            Effect: Allow
            Action: [
              's3:GetObject',
              #todo: remove PutObject from the bucket policy
              's3:PutObject'
            ]
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"

Outputs:
  S3Bucket:
    Description: "S3 Bucket Resource"
    Value: !Ref S3Bucket
  CloudfrontDistributionName:
    Description: "Cloudfront Distribution Domain Name"
    Value: !GetAtt CloudfrontDistribution.DomainName
  CloudfrontDistributionId:
    Description: "Cloudfront Distribution Id"
    Value: !Ref CloudfrontDistribution